name: Upload Website

on:
  push:
    branches:
    - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Deploy image files to S3 without gzip
      run: aws s3 sync ./website/ s3://www.gregchow.net --delete --exclude "*" --include "*.png" --include "*.webp" --include "*.ico" --cache-control "max-age=86400" --metadata "Content-Encoding="
    - name: Deploy other files with gzip
      run: aws s3 sync ./website/ s3://www.gregchow.net --delete --exclude ".vs*" --exclude "desktop.ini" --exclude "*.png" --exclude "*.webp" --exclude "*.ico" --cache-control "max-age=86400" --metadata "Content-Encoding=gzip"


    - name: Get url for the Cloudfront cache refresh Lambda Functio
      id: get-urlCache
      run: |
        urlCache=$(curl -s https://s3.amazonaws.com/gregchow.jsonbucket/links.json | jq -r '.urlCache')
        echo "::set-output name=urlCache::$urlCache"

    - name: Perform HTTP GET request to refresh CloudFront Distribution
      run: |
        urlCache="${{ steps.get-urlCache.outputs.urlCache }}"
        curl -s -o /dev/null $urlCache
        curl -s -o /dev/null https://gregchow.net
        